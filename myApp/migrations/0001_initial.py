# Generated by Django 2.2.5 on 2019-09-28 23:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('familyid', models.IntegerField(default=0)),
                ('food_item_id', models.IntegerField(default=1)),
                ('food_grp', models.CharField(max_length=200)),
                ('Food_name', models.CharField(max_length=200)),
                ('food_wt', models.FloatField(default=0, verbose_name='weight')),
                ('protein', models.FloatField(default=0, verbose_name='protein')),
                ('vita', models.FloatField(default=0, verbose_name='Vit-A')),
                ('fe', models.FloatField(default=0, verbose_name='iron')),
                ('feas_DRI', models.IntegerField(choices=[(1, 'no'), (2, 'maybe no'), (3, 'maybe yes'), (4, 'yes')], default=1, verbose_name='feas_DRI')),
                ('feas_soc_acceptable', models.IntegerField(choices=[(1, 'no'), (2, 'maybe no'), (3, 'maybe yes'), (4, 'yes')], default=1, verbose_name='feas_social')),
                ('feas_prod_skill', models.IntegerField(choices=[(1, 'no'), (2, 'maybe no'), (3, 'maybe yes'), (4, 'yes')], default=1, verbose_name='feas_prod_skill')),
                ('feas_tech_service', models.IntegerField(choices=[(1, 'no'), (2, 'maybe no'), (3, 'maybe yes'), (4, 'yes')], default=1, verbose_name='feas_tech_service')),
                ('feas_invest_fixed', models.IntegerField(choices=[(1, 'no'), (2, 'maybe no'), (3, 'maybe yes'), (4, 'yes')], default=1, verbose_name='feas_invest_fixed')),
                ('feas_invest_variable', models.IntegerField(choices=[(1, 'no'), (2, 'maybe no'), (3, 'maybe yes'), (4, 'yes')], default=1, verbose_name='feas_invest_variable')),
                ('feas_availability', models.IntegerField(choices=[(1, 'no'), (2, 'maybe no'), (3, 'maybe yes'), (4, 'yes')], default=1, verbose_name='feas_availability')),
            ],
        ),
        migrations.CreateModel(
            name='DRI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_id', models.IntegerField(default=1)),
                ('male_protain', models.FloatField(default=0)),
                ('male_vitA', models.FloatField(default=0)),
                ('male_fe', models.FloatField(default=0)),
                ('female_protain', models.FloatField(default=0)),
                ('female_vitA', models.FloatField(default=0)),
                ('female_fe', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DRI_women',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
                ('female_prot2', models.FloatField(default=0)),
                ('female_vit2', models.FloatField(default=0)),
                ('female_fe2', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('country', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=200)),
                ('province', models.CharField(max_length=200)),
                ('community', models.CharField(max_length=200)),
                ('protein', models.FloatField(default=0, verbose_name='protein')),
                ('vita', models.FloatField(default=0, verbose_name='Vit-A')),
                ('fe', models.FloatField(default=0, verbose_name='iron')),
                ('protein_s', models.FloatField(default=0, verbose_name='protein_s')),
                ('vita_s', models.FloatField(default=0, verbose_name='Vit-A_s')),
                ('fe_s', models.FloatField(default=0, verbose_name='iron_s')),
                ('size', models.IntegerField(default=0)),
                ('month_start', models.IntegerField(default=0)),
                ('month_end', models.IntegerField(default=0)),
                ('remark', models.CharField(blank=True, max_length=600, verbose_name='remark')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='record_date')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('familyid', models.IntegerField(default=0)),
                ('name', models.CharField(default='no name', max_length=200, verbose_name='name')),
                ('age', models.IntegerField(choices=[(1, '0 <= age < 0.5'), (2, '0.5 <= age < 1'), (3, '1 <= age < 1.5'), (4, '1.5 <= age < 2'), (5, '2 <= age < 3'), (6, '3 <= age < 4'), (7, '4 <= age < 5'), (8, '5 <= age < 6'), (9, '6 <= age < 7'), (10, '7 <= age < 8'), (11, '8 <= age < 9'), (11, '9 <= age < 10'), (12, '10 <= age < 11'), (13, '11 <= age < 12'), (14, '12 <= age < 13'), (15, '13 <= age < 14'), (16, '14 <= age < 15'), (17, '15 <= age < 16'), (18, '16 <= age < 17'), (19, '17 <= age < 18'), (20, '18 <= age < 19'), (21, '19 <= age < 65'), (22, '65 <= age')], default=1, verbose_name='age')),
                ('sex', models.IntegerField(choices=[(1, 'male'), (2, 'female')], default=1, verbose_name='sex')),
                ('women_s', models.IntegerField(choices=[(0, 'no'), (1, 'pregnancy first 3 month'), (2, 'pregnancy 4 to 6 month'), (3, 'pregnancy 7 to 9 month'), (4, 'lactation 0-6 month'), (5, 'lactation over 7 month')], default=0, verbose_name='women_special')),
                ('protein', models.FloatField(default=0, verbose_name='protein')),
                ('vita', models.FloatField(default=0, verbose_name='Vit-A')),
                ('fe', models.FloatField(default=0, verbose_name='iron')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='record_date')),
            ],
            options={
                'verbose_name': 'Family information',
                'verbose_name_plural': 'Family information',
            },
        ),
        migrations.CreateModel(
            name='FCT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FCT_id', models.IntegerField(default=1)),
                ('food_grp_id', models.IntegerField(default=1)),
                ('food_item_id', models.IntegerField(default=1)),
                ('Food_grp', models.CharField(max_length=200)),
                ('Food_name', models.CharField(max_length=200)),
                ('Crop_ref', models.CharField(max_length=200)),
                ('Edible', models.FloatField(default=0)),
                ('Energy', models.FloatField(default=0)),
                ('WATER', models.FloatField(default=0)),
                ('Protein', models.FloatField(default=0)),
                ('Fat', models.FloatField(default=0)),
                ('Carbohydrate', models.FloatField(default=0)),
                ('Fiber', models.FloatField(default=0)),
                ('ASH', models.FloatField(default=0)),
                ('CA', models.FloatField(default=0)),
                ('FE', models.FloatField(default=0)),
                ('MG', models.FloatField(default=0)),
                ('P', models.FloatField(default=0)),
                ('K', models.FloatField(default=0)),
                ('NA', models.FloatField(default=0)),
                ('ZN', models.FloatField(default=0)),
                ('CU', models.FloatField(default=0)),
                ('VITA_RAE', models.FloatField(default=0)),
                ('RETOL', models.FloatField(default=0)),
                ('B_Cart_eq', models.FloatField(default=0)),
                ('VITD', models.FloatField(default=0)),
                ('VITE', models.FloatField(default=0)),
                ('THIA', models.FloatField(default=0)),
                ('RIBF', models.FloatField(default=0)),
                ('NIA', models.FloatField(default=0)),
                ('VITB6C', models.FloatField(default=0)),
                ('FOL', models.FloatField(default=0)),
                ('VITB12', models.FloatField(default=0)),
                ('VITC', models.FloatField(default=0)),
            ],
        ),
    ]
